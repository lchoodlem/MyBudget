// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBudget.Server.Data;

#nullable disable

namespace MyBudget.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230218220309_UpdateBudgetYear")]
    partial class UpdateBudgetYear
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyBudget.Shared.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcctNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AcctTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AcctTypeId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcctNum = "...0000",
                            AcctTypeId = 3,
                            Deleted = false,
                            Name = "Egg1",
                            OrganizationId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            AcctNum = "...0000",
                            AcctTypeId = 3,
                            Deleted = false,
                            Name = "Egg2",
                            OrganizationId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            AcctNum = "...0000",
                            AcctTypeId = 3,
                            Deleted = false,
                            Name = "Bronco",
                            OrganizationId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            AcctNum = "...0000",
                            AcctTypeId = 3,
                            Deleted = false,
                            Name = "Harley",
                            OrganizationId = 1,
                            Visible = true
                        });
                });

            modelBuilder.Entity("MyBudget.Shared.AcctType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AcctTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            Name = "Visa",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            Name = "MC",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            Name = "Loan",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            Name = "Bank",
                            Visible = true
                        });
                });

            modelBuilder.Entity("MyBudget.Shared.BudgetYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CurrentYear")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReconcileBalanceId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReconcileBalanceId");

                    b.ToTable("BudgetYears");
                });

            modelBuilder.Entity("MyBudget.Shared.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Chase",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "PNC",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Cabellas",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "MLife",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 5,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Xfinity",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 6,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "BestBuy",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 7,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Best Egg",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 8,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "NetFlix",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 9,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Green Mountain",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 10,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Chesapeake",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        },
                        new
                        {
                            Id = 11,
                            Address1 = "",
                            Address2 = "",
                            Deleted = false,
                            Description = "",
                            Name = "Progressive",
                            Phone1 = "",
                            Phone2 = "",
                            Visible = true
                        });
                });

            modelBuilder.Entity("MyBudget.Shared.ReconcileBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastBankDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LastBankValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthBudgetIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthBudgetOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthReconcileIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthReconcileOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthReconcileTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Reconciled")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReconcileBalances");
                });

            modelBuilder.Entity("MyBudget.Shared.StartDateAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("StartDateAmounts");
                });

            modelBuilder.Entity("MyBudget.Shared.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("BudgetAmount")
                        .HasColumnType("float");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("MonthInt")
                        .HasColumnType("int");

                    b.Property<bool>("Reconciled")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("YearInt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MyBudget.Shared.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Debit")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Debit = false,
                            Deleted = false,
                            Description = "This is a Deposit Transation (+)",
                            TypeName = "Deposit",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            Debit = true,
                            Deleted = false,
                            Description = "This is a Paymenmt Transation (-)",
                            TypeName = "Payment",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            Debit = true,
                            Deleted = false,
                            Description = "This is a Withdrawl Payment Transation (-)",
                            TypeName = "CashWithdrawl",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            Debit = false,
                            Deleted = false,
                            Description = "This is a Withdrawl Transation (+)",
                            TypeName = "CashDep",
                            Visible = true
                        },
                        new
                        {
                            Id = 5,
                            Debit = true,
                            Deleted = false,
                            Description = "This is a Credit Card Paymenmt Transation (-)",
                            TypeName = "CCPayment",
                            Visible = true
                        },
                        new
                        {
                            Id = 6,
                            Debit = false,
                            Deleted = false,
                            Description = "This is a Salary Transation (+)",
                            TypeName = "Payroll",
                            Visible = true
                        });
                });

            modelBuilder.Entity("MyBudget.Shared.Account", b =>
                {
                    b.HasOne("MyBudget.Shared.AcctType", "AcctType")
                        .WithMany()
                        .HasForeignKey("AcctTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBudget.Shared.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcctType");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("MyBudget.Shared.BudgetYear", b =>
                {
                    b.HasOne("MyBudget.Shared.ReconcileBalance", "Balances")
                        .WithMany()
                        .HasForeignKey("ReconcileBalanceId");

                    b.Navigation("Balances");
                });

            modelBuilder.Entity("MyBudget.Shared.StartDateAmount", b =>
                {
                    b.HasOne("MyBudget.Shared.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("MyBudget.Shared.Transaction", b =>
                {
                    b.HasOne("MyBudget.Shared.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBudget.Shared.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TransactionType");
                });
#pragma warning restore 612, 618
        }
    }
}
